"use strict";const o=require("../../common/vendor.js"),n=require("../../api/notify/index.js"),c=require("./auth.js"),l=o.defineStore({id:"mesStore",state:()=>({hadNew:0,list:[],total:0,socket:null,createCount:0,status:!1,maxCreateCount:5}),getters:{gethadNew:t=>t.hadNew,getList:t=>t.list,mesList:t=>t.list||[]},actions:{showUnread(t){return new Promise((a,s)=>{n.getWithoutRead({userId:c.useAuthStore().user.id}).then(e=>{console.log(e,"res"),e.data.code===200?(t==="num"?(console.log(e.data,"res.data"),this.sethadNew(e.data.data||0)):(this.setList(e.data.data.Notifications||[]),this.setTotal(e.data.data.Total||0)),a(e)):s(!1)})})},addMesList(t){return new Promise((a,s)=>{console.log(t,"data");let e="";t.type==="noRead"||(e="/api/notifier/list"),n.getNotifyList(t,e).then(i=>{t.page_index===1&&this.setClear(),console.log(i,"res"),i.data.code===200&&i.data.data?(console.log(i.data.data,"res.data"),this.setList(i.data.data.Notifications||[]),this.setTotal(i.data.data.Total||0),a(i.data)):s(!1)})})},sethadNew(t){this.hadNew=t},setTotal(t){this.total=t},setList(t){this.list.push(...t),console.log(this.list,"this.list")},setClear(){this.list=[]},changeStatus(t){this.list.find(a=>a.id===t).status=1},async createSocket(){if(!o.index.getStorageSync("token")||(console.log("创建socket"),this.status||this.createCount>=this.maxCreateCount||this.socket))return;await n.CloseSocket();const t="ws://sit.2018ctjs.cn/api/notifier/conn?userId="+c.useAuthStore().user.id,a=o.index.getStorageSync("token")||"";try{if(this.socket){try{o.index.closeSocket()}catch(s){console.log("关闭旧连接失败",s)}this.socket=null}o.index.connectSocket({url:t,header:{Authorization:a},success:()=>{console.log("Socket连接请求已发送")},fail:s=>{console.error("Socket连接请求失败",s),this.createCount++,this.createCount<this.maxCreateCount&&setTimeout(()=>{console.log(`尝试第${this.createCount}次重连...`),this.createSocket()},2e3)}}),o.index.onSocketOpen(()=>{console.log("WebSocket连接已建立!"),this.status=!0,this.socket=!0,this.createCount=0,this.showUnread("num");const s=setInterval(()=>{this.socket&&this.status?o.index.sendSocketMessage({data:"ping",success:()=>{console.log("心跳消息已发送")},fail:e=>{console.error("心跳消息发送失败",e),clearInterval(s)}}):clearInterval(s)},1e4)}),o.index.onSocketMessage(s=>{console.log(s.data,"收到消息");try{const e=JSON.parse(s.data);console.log(e,"data"),typeof e.ID=="number"&&(console.log(e,"data"),this.setTotal(this.total+1),this.sethadNew(this.hadNew+1),this.list.unshift(e),console.log(this.list,"unshift"))}catch(e){console.error("解析消息失败:",e)}}),o.index.onSocketClose(()=>{console.log("WebSocket连接已断开"),this.status=!1,this.socket=null,this.createCount++,this.createCount<this.maxCreateCount&&setTimeout(()=>{console.log(`尝试第${this.createCount}次重连...`),this.createSocket()},2e3)}),o.index.onSocketError(s=>{console.error("WebSocket连接错误:",s),this.status=!1})}catch(s){console.error("创建WebSocket实例失败:",s),this.createCount++,this.createCount<this.maxCreateCount&&setTimeout(()=>{this.createSocket()},2e3)}},closeSocket(){if(this.socket)try{n.CloseSocket(),o.index.closeSocket({success:()=>{console.log("WebSocket已手动关闭")}})}catch(t){console.error("关闭WebSocket时出错:",t)}finally{this.socket=null,this.status=!1}}}});exports.usemesStore=l;
